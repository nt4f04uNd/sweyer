name: 🚀🤖 Bundle and deploy Sweyer to Google Play
description: Bundles and deploys Sweyer to Google Play beta track

inputs:
  flutter_channel:
    required: false
    default: "stable"
    description: The channel of the Flutter used to build Sweyer with. 
  flutter_version:
    required: false
    default: "3.29.2"
    description: The version of Flutter used to build Sweyer with.
  ruby_version:
    required: false
    default: 3.3.0
  testing_arguments:
    required: false
    default: ""
    description: Optional additional arguments to the flutter test command.
  secrets_ANDROID_KEYSTORE_FILE:
    required: true
  secrets_ANDROID_KEYSTORE_PASSWORD:
    required: true
  secrets_ANDROID_KEY_PASSWORD:
    required: true
  secrets_ANDROID_KEY_ALIAS:
    required: true
  secrets_GPLAY_FASTLANE_SERVICE_ACCOUNT_KEY_JSON:
    required: true
  secrets_FIREBASE_CLI_TOKEN:
    required: true
  vars_FIREBASE_ANDROID_APP_ID:
    required: true

runs:
  using: "composite"
  steps:
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{inputs.flutter_version}}
        channel: ${{inputs.flutter_channel}}
        cache: true

    - name: 💎 Set up ruby env
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{inputs.ruby_version}}
        bundler-cache: true

    - name: ⚙️ Decode Keystore File
      uses: timheuer/base64-to-file@v1
      id: android_keystore
      with:
        fileName: "keystore.jks"
        encodedString: ${{ inputs.secrets_ANDROID_KEYSTORE_FILE }}

    - name: ⚙️ Generate key.properties
      shell: bash
      run: |
        cat <<EOF > key.properties
        storePassword=${{ inputs.secrets_ANDROID_KEYSTORE_PASSWORD }}
        keyPassword=${{ inputs.secrets_ANDROID_KEY_PASSWORD }}
        keyAlias=${{ inputs.secrets_ANDROID_KEY_ALIAS }}
        storeFile=${{ steps.android_keystore.outputs.filePath }}
        EOF
        mv key.properties ${{ github.workspace }}/android/key.properties

    - name: 📖 Read app version
      uses: NiklasLehnfeld/flutter-version-number-action@v1
      id: read-version
      with:
        file-path: pubspec.yaml

    - name: 🪓 Split app version
      uses: winterjung/split@v2
      id: splitted-version
      with:
        msg: ${{ steps.read-version.outputs.version-number }}
        separator: '+'

    - name: 🏗️ Build AAB
      shell: bash
      run: |
        export JAVA_HOME="$JAVA_HOME_17_X64"
        flutter build appbundle --obfuscate --tree-shake-icons --split-debug-info=./build/app/outputs/symbols

    - name: ✍ Rename AAB
      shell: bash
      run: |
        mv ${{ github.workspace }}/build/app/outputs/bundle/release/app-release.aab ${{ github.workspace }}/build/app/outputs/bundle/release/sweyer@${{ steps.read-version.outputs.version-number }}.aab
        
    - name: 🏗️ Build APK
      shell: bash
      run: |
        export JAVA_HOME="$JAVA_HOME_17_X64"
        flutter build apk --obfuscate --tree-shake-icons --split-debug-info=./build/app/outputs/symbols

    - name: ✍ Rename APK
      shell: bash
      run: |
        mv ${{ github.workspace }}/build/app/outputs/flutter-apk/app-release.apk ${{ github.workspace }}/build/app/outputs/flutter-apk/sweyer@${{ steps.read-version.outputs.version-number }}.apk

    - name: 📁 Zip symbols
      shell: bash
      id: zip-symbols
      run: |
        zip -r ${{ github.workspace }}/symbols.zip ${{ github.workspace }}/build/app/outputs/symbols/

    - name: 📁 Upload build artifacts (symbols)
      uses: actions/upload-artifact@v4
      with:
        name: symbols
        path: |
          ${{ github.workspace }}/symbols.zip

    - name: 📁 Upload build artifacts (aab)
      uses: actions/upload-artifact@v4
      with:
        name: sweyer@${{ steps.read-version.outputs.version-number }}.aab
        path: |
          ${{ github.workspace }}/build/app/outputs/bundle/release/sweyer@${{ steps.read-version.outputs.version-number }}.aab

    - name: 📁 Upload build artifacts (apk)
      uses: actions/upload-artifact@v4
      with:
        name: sweyer@${{ steps.read-version.outputs.version-number }}.apk
        path: |
          ${{ github.workspace }}/build/app/outputs/flutter-apk/sweyer@${{ steps.read-version.outputs.version-number }}.apk

    - name: ⚙️ Decode Service Account Key JSON File
      uses: timheuer/base64-to-file@v1
      id: android_service_account_json_file
      with:
        fileName: "androidServiceAccount.json"
        encodedString: ${{ inputs.secrets_GPLAY_FASTLANE_SERVICE_ACCOUNT_KEY_JSON }}

    - name: 🚀🤖 Prepare Fastlane
      shell: bash
      run: |
        cd android
        bundle install --jobs 4 --retry 3
        bundle exec fastlane install_plugins

    # Install the Firebase CLI in order to perform crashlytics operations
    # Kudos to https://github.com/fastlane/fastlane/discussions/20230#discussioncomment-7899888
    - name: 🔥 Install Firebase CLI
      shell: bash
      run: |
        curl -sL https://firebase.tools | bash

    # Firebase CLI token from login CLI command
    # Retrieve Firebase Android app ID from Firebase GUI console
    - name: 🚀🔥 Deploy symbols to Firebase Crashlytics
      shell: bash
      run: |
        firebase --token="${{ inputs.secrets_FIREBASE_CLI_TOKEN }}" crashlytics:symbols:upload --app="${{ inputs.vars_FIREBASE_ANDROID_APP_ID }}" ${{ github.workspace }}/symbols.zip

    - name: 🚀🤖 Deploy Android release to Google Play beta track
      shell: bash
      run: |
        cd android
        bundle exec fastlane android beta package_name:"com.nt4f04und.sweyer" aab_path:"${{ github.workspace }}/build/app/outputs/bundle/release/sweyer@${{ steps.read-version.outputs.version-number }}.aab"
      env:
        PUBSPEC_LOCATION: ${{ github.workspace }}/pubspec.yaml
        FASTLANE_ANDROID_JSON_KEY_FILE: ${{ steps.android_service_account_json_file.outputs.filePath }}

    - name: 📝 Draft a GitHub release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ steps.splitted-version.outputs._0 }}
        tag_name: ${{ steps.splitted-version.outputs._0 }}
        draft: true
        fail_on_unmatched_files: true
        generate_release_notes: true
        files: |
          ${{ github.workspace }}/symbols.zip
          ${{ github.workspace }}/build/app/outputs/bundle/release/sweyer@${{ steps.read-version.outputs.version-number }}.aab
          ${{ github.workspace }}/build/app/outputs/flutter-apk/sweyer@${{ steps.read-version.outputs.version-number }}.apk
